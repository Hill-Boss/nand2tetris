// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Or(a = reset, b = load, out = RorL);
    Or(a = inc, b = RorL, out = ifload);
    Register(in = RL, load = ifload, out = Rout, out = out);
    Mux16(a = LD, b = false, sel = reset, out = RL);
    Mux16(a = IC, b = in, sel = load, out = LD);
    Mux16(a = false, b = Iout, sel = inc, out = IC);
    Inc16(in = Rout, out = Iout);

    // Better more elegant solution
//    Inc16(in = Rout, out = Iout);
//    Mux16(a = Rout, b = Iout, sel = inc, out = IC);
//    Mux16(a = IC, b = in, sel = load, out = LD);
//    Mux16(a = LD, b = false, sel = reset, out = RL);
//    Register(in = RL, load = true, out = Rout, out = out);


}
